# Obfuscated with PyObfuscate
# https://www.github.com/ALI-JUTT
# Time : Mon Sep  2 22:17:15 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))
